import { ethers } from "hardhat";
import { expect } from "chai";

import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import type { ContractFactory } from "ethers";
import type { ISetup, Exploit3 } from "../typechain-types";
import { ISetup__factory } from "../typechain-types";

const { parseUnits } = ethers.utils;

import * as ForkHelpers from "./shared/forkHelpers";

describe("", () => {
  let owner: SignerWithAddress;
  let alice: SignerWithAddress;
  let bob: SignerWithAddress;

  let setup: ISetup;
  let Exploit: ContractFactory;
  let exploit: Exploit3;

  beforeEach(async () => {
    await ForkHelpers.forkToGoerli(6385033);

    [owner, alice, bob] = await ethers.getSigners();

    Exploit = await ethers.getContractFactory("Exploit3");

    setup = ISetup__factory.connect(
      "0x6b24634B517a63Ed0fa2a39977286e13e7E35E25",
      owner
    );
  });

  xit("works", async () => {
    await Exploit.deploy();

    expect(await setup.isSolved()).to.be.true;
  });
});
